on: push
name: 🤖 Validate code
jobs:
  validate:
    name: 🤖 Validate
    runs-on: ubuntu-latest
    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v3

      - name: 🧰 Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - uses: pnpm/action-setup@v2
        name: 🚀 Install pnpm
        id: pnpm-install
        with:
          version: 10
          run_install: false

      - name: 🧭 Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: 🗄️ Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🔗 Install dependencies
        run: pnpm install --frozen-lockfile -r

      - name: 🏷️ Test types
        run: pnpm run test:types

      - name: 📝 Lint
        run: pnpm run lint

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/master'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v3

      - name: 🧰 Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - uses: pnpm/action-setup@v2
        name: 🚀 Install pnpm
        id: pnpm-install
        with:
          version: 10
          run_install: false

      - name: 🧭 Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: 🗄️ Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🔗 Install dependencies
        run: pnpm install --frozen-lockfile -r

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🚢 Deploy
        run: pnpm run deploy
